<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.33">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.workflow.multibranch.JobPropertyTrackerAction plugin="workflow-multibranch@2.21">
      <jobPropertyDescriptors>
        <string>hudson.model.ParametersDefinitionProperty</string>
      </jobPropertyDescriptors>
    </org.jenkinsci.plugins.workflow.multibranch.JobPropertyTrackerAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
    
    environment {
        registry = &quot;https://hub.docker.com/mikaelvg&quot;
        registryCredential = &apos;dockerhub&apos;
     }    
    
    agent any
    stages {
        stage (&apos;Clone repo&apos;) {
            steps {
                withCredentials([[$class: &apos;UsernamePasswordMultiBinding&apos;, credentialsId: &apos;github-account&apos;,
                    usernameVariable: &apos;USERNAME&apos;, passwordVariable: &apos;PASSWORD&apos;]]) {
                        sh &apos;echo uname=$USERNAME pwd=$PASSWORD&apos;
                        git branch: &apos;master&apos;, url: &quot;https://$USERNAME:$PASSWORD@github.com/mikaelvg/student.git&quot;
                    }
            }
        }
        stage (&apos;Build Package&apos;) {
            steps {
                withMaven(
                    maven: &apos;maven-3&apos;,
                    mavenSettingsConfig: &apos;jenkins-maven-settings&apos;) {
                    sh &quot;mvn package compile -DskipTests=true&quot;
                    }
                    
            }
        }      
        
        stage(&apos;Docker&apos;) {
          steps{
            script {
              docker.build registry + &quot;:$BUILD_NUMBER&quot;
            }
          }
        }        
    }
    
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>